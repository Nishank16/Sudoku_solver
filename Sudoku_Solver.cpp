
#include<iostream>
#include<cmath>
using namespace std;

void print(int board[9][9], int n) {
   for(int i=0;i<9;i++) {
        for(int j=0;j<9;j++) {
            cout<<board[i][j]<<" ";
            if(j==2 || j==5) cout<<"| ";
        }
        cout <<endl;
        if(i==2 || i==5 || i==8) cout<<"---------------------"<<endl;
    }
}

bool isvalid(int board[9][9], int i, int j, int num, int n) {
    for(int x = 0; x < n; x++) {
        if(board[i][x] == num || board[x][j] == num) {
            return false;
        }
    }

    int rootn = sqrt(n);
    int starti = i - i % rootn;
    int startj = j - j % rootn;

    for(int x = starti; x < starti + rootn; x++) {
        for(int y = startj; y < startj + rootn; y++) {
            if(board[x][y] == num) {
                return false;
            }
        }
    }
    return true;
}

bool Sudokusolver(int board[9][9], int i, int j, int n) {
    if(i == n) {
        print(board, n);
        return true;
    }

    if(j == n) {
        return Sudokusolver(board, i + 1, 0, n);
    }

    if(board[i][j] != 0) {
        return Sudokusolver(board, i, j + 1, n);
    }

    for(int num = 1; num <= 9; num++) {
        if(isvalid(board, i, j, num, n)) {
            board[i][j] = num;
            bool subans = Sudokusolver(board, i, j + 1, n);
            if(subans) {
                return true;
            }
            board[i][j] = 0;
        }
    }
    return false;
}

int main() {
    int n = 9;
    int sudokus[10][9][9] = {
        {
            {0, 0, 7, 1, 0, 0, 0, 6, 0},
            {1, 0, 5, 2, 0, 8, 0, 0, 0},
            {6, 0, 0, 0, 0, 7, 1, 2, 0},
            {3, 1, 2, 4, 0, 5, 0, 0, 8},
            {0, 0, 6, 0, 9, 0, 2, 0, 0},
            {0, 0, 0, 0, 0, 3, 0, 0, 1},
            {0, 0, 1, 0, 0, 4, 9, 8, 6},
            {0, 0, 3, 9, 0, 6, 0, 0, 0},
            {0, 6, 0, 0, 8, 2, 7, 0, 3}
        },
        {
            {5, 3, 0, 0, 7, 0, 0, 0, 0},
            {6, 0, 0, 1, 9, 5, 0, 0, 0},
            {0, 9, 8, 0, 0, 0, 0, 6, 0},
            {8, 0, 0, 0, 6, 0, 0, 0, 3},
            {4, 0, 0, 8, 0, 3, 0, 0, 1},
            {7, 0, 0, 0, 2, 0, 0, 0, 6},
            {0, 6, 0, 0, 0, 0, 2, 8, 0},
            {0, 0, 0, 4, 1, 9, 0, 0, 5},
            {0, 0, 0, 0, 8, 0, 0, 7, 9}
        },
        {
            {1, 0, 0, 0, 0, 7, 0, 9, 0},
            {0, 3, 0, 0, 2, 0, 0, 0, 8},
            {0, 0, 9, 6, 0, 0, 5, 0, 0},
            {0, 0, 5, 3, 0, 0, 9, 0, 0},
            {0, 1, 0, 0, 8, 0, 0, 0, 2},
            {6, 0, 0, 0, 0, 4, 0, 0, 0},
            {3, 0, 0, 0, 0, 0, 0, 1, 0},
            {0, 4, 0, 0, 0, 0, 0, 0, 7},
            {0, 0, 7, 0, 0, 0, 3, 0, 0}
        },
        {
            {0, 0, 5, 0, 0, 0, 0, 0, 8},
            {0, 0, 0, 4, 0, 0, 0, 7, 0},
            {0, 0, 6, 0, 2, 3, 0, 0, 0},
            {3, 0, 0, 0, 0, 0, 5, 0, 0},
            {0, 2, 0, 0, 0, 0, 0, 6, 0},
            {0, 0, 7, 0, 0, 0, 0, 0, 4},
            {0, 0, 0, 8, 3, 0, 6, 0, 0},
            {0, 6, 0, 0, 0, 9, 0, 0, 0},
            {7, 0, 0, 0, 0, 0, 4, 0, 0}
        },
        {
            {0, 0, 0, 2, 6, 0, 7, 0, 1},
            {6, 8, 0, 0, 7, 0, 0, 9, 0},
            {1, 9, 0, 0, 0, 4, 5, 0, 0},
            {8, 2, 0, 1, 0, 0, 0, 4, 0},
            {0, 0, 4, 6, 0, 2, 9, 0, 0},
            {0, 5, 0, 0, 0, 3, 0, 2, 8},
            {0, 0, 9, 3, 0, 0, 0, 7, 4},
            {0, 4, 0, 0, 5, 0, 0, 3, 6},
            {7, 0, 3, 0, 1, 8, 0, 0, 0}
        },
        {
            {0, 0, 1, 0, 0, 7, 0, 9, 0},
            {0, 3, 0, 0, 2, 0, 0, 0, 8},
            {0, 0, 9, 6, 0, 0, 5, 0, 0},
            {0, 0, 5, 3, 0, 0, 9, 0, 0},
            {0, 1, 0, 0, 8, 0, 0, 0, 2},
            {6, 0, 0, 0, 0, 4, 0, 0, 0},
            {3, 0, 0, 0, 0, 0, 0, 1, 0},
            {0, 4, 0, 0, 0, 0, 0, 0, 7},
            {0, 0, 7, 0, 0, 0, 3, 0, 0}
        },
        {
            {2, 0, 0, 3, 0, 0, 0, 0, 0},
            {8, 0, 4, 0, 6, 2, 0, 0, 3},
            {0, 1, 3, 8, 0, 0, 2, 0, 0},
            {0, 0, 0, 0, 2, 0, 3, 9, 0},
            {5, 0, 7, 0, 0, 0, 6, 0, 1},
            {0, 3, 2, 0, 5, 0, 0, 0, 0},
            {0, 0, 1, 0, 0, 9, 7, 3, 0},
            {7, 0, 0, 6, 8, 0, 1, 0, 2},
            {0, 0, 0, 0, 0, 4, 0, 0, 9}
        },
        {
            {0, 0, 5, 0, 8, 0, 6, 0, 0},
            {0, 3, 0, 6, 0, 0, 0, 0, 0},
            {0, 4, 0, 0, 0, 3, 0, 0, 0},
            {0, 0, 0, 0, 0, 0, 0, 2, 0},
            {0, 2, 0, 0, 9, 0, 0, 4, 0},
            {0, 8, 0, 0, 0, 0, 0, 0, 0},
            {0, 0, 0, 7, 0, 0, 0, 5, 0},
            {0, 0, 0, 0, 0, 6, 0, 1, 0},
            {0, 0, 6, 0, 2, 0, 4, 0, 0}
        },
        {
            {0, 0, 0, 0, 6, 0, 0, 0, 0},
            {0, 0, 3, 4, 0, 0, 0, 0, 0},
            {0, 7, 0, 0, 0, 8, 4, 0, 0},
            {0, 0, 0, 0, 0, 1, 9, 0, 6},
            {0, 0, 0, 0, 0, 0, 0, 0, 0},
            {9, 0, 1, 2, 0, 0, 0, 0, 0},
            {0, 0, 2, 5, 0, 0, 0, 8, 0},
            {0, 0, 0, 0, 0, 6, 2, 0, 0},
            {0, 0, 0, 0, 7, 0, 0, 0, 0}
        },
        {
            {0, 0, 0, 0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0, 0, 0, 0}
        }
    };

    cout << "Select a Sudoku puzzle to solve (1-10): ";
    int choice;
    cin >> choice;

    if (choice < 1 || choice > 10) {
        cout << "Invalid choice. Please select a number between 1 and 10." << endl;
        return 0;
    }

    int selectedPuzzle[9][9];
    for (int i = 0; i < 9; i++) {
        for (int j = 0; j < 9; j++) {
            selectedPuzzle[i][j] = sudokus[choice - 1][i][j];
        }
    }

    cout << "Solving Sudoku puzzle #" << choice << "..." << endl;
    Sudokusolver(selectedPuzzle, 0, 0, n);

    return 0;
}

